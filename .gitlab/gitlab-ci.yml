default:
  image: nixos/nix

stages:
  - build

.global-variables: &global-variables
  SHABKA_REPO: "https://github.com/kalbasit/shabka.git"

.install-nix: &install-nix |
  curl https://nixos.org/nix/install | sh

.download-shabka: &download-shabka |
  if ! git clone "${SHABKA_REPO}" -b "${CI_COMMIT_BRANCH}" ${HOME}/shabka; then
    git clone "${SHABKA_REPO}" ${HOME}/shabka
    >&2 echo "Cloned shabka from the master branch"
  else
    >&2 echo "Cloned shabka from the ${CI_COMMIT_BRANCH} branch"
  fi

.install-dependencies: &install-dependencies |
  if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
    source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
  fi

  nix-env -f '<nixpkgs>' -i -A bash

.enable-cachix: &enable-cachix |
  if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
    source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
  fi

  cachix use "${CACHIX_CACHE}"

.build-host: &build-host |
  if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
    source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
  fi

  export DOTSHABKA_PATH="$(pwd)"

  ${HOME}/shabka/bin/shabka -h "${CI_JOB_NAME}" build

.push-to-cachix: &push-to-cachix |
  if [[ -r "${HOME}/.nix-profile/etc/profile.d/nix.sh" ]]; then
    source "${HOME}/.nix-profile/etc/profile.d/nix.sh"
  fi

  # Cachix is not available for pull requests coming from a fork for security
  # reasons.
  if [[ -z "${CACHIX_CACHE:-}" ]]; then
    >&2 echo "CACHIX_CACHE is not set, cannot push to cachix"
    exit 0
  fi

  export DOTSHABKA_PATH="$(pwd)"
  export CACHIX_SIGNING_KEY
  ${HOME}/shabka/bin/shabka push-to-cachix "${CACHIX_CACHE}" "${CI_JOB_NAME}"

.linux-host-template: &linux-host-template
  stage: build
  script:
    - *download-shabka
    - *install-dependencies
    - *enable-cachix
    - *build-host
    - *push-to-cachix
  tags:
    - nix-store
  variables:
    <<: *global-variables

duck:
  <<: *linux-host-template

giraffe:
  <<: *linux-host-template

hedgehog:
  <<: *linux-host-template

nas:
  <<: *linux-host-template
